{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar hash = __importStar(require(\"hash.js\"));\n\nvar bytes_1 = require(\"@ethersproject/bytes\");\n\nvar logger_1 = require(\"@ethersproject/logger\");\n\nvar _version_1 = require(\"./_version\");\n\nvar logger = new logger_1.Logger(_version_1.version);\nvar SupportedAlgorithm;\n\n(function (SupportedAlgorithm) {\n  SupportedAlgorithm[\"sha256\"] = \"sha256\";\n  SupportedAlgorithm[\"sha512\"] = \"sha512\";\n})(SupportedAlgorithm = exports.SupportedAlgorithm || (exports.SupportedAlgorithm = {}));\n\n;\n\nfunction ripemd160(data) {\n  return \"0x\" + hash.ripemd160().update(bytes_1.arrayify(data)).digest(\"hex\");\n}\n\nexports.ripemd160 = ripemd160;\n\nfunction sha256(data) {\n  return \"0x\" + hash.sha256().update(bytes_1.arrayify(data)).digest(\"hex\");\n}\n\nexports.sha256 = sha256;\n\nfunction sha512(data) {\n  return \"0x\" + hash.sha512().update(bytes_1.arrayify(data)).digest(\"hex\");\n}\n\nexports.sha512 = sha512;\n\nfunction computeHmac(algorithm, key, data) {\n  if (!SupportedAlgorithm[algorithm]) {\n    logger.throwError(\"unsupported algorithm \" + algorithm, logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"hmac\",\n      algorithm: algorithm\n    });\n  }\n\n  return \"0x\" + hash.hmac(hash[algorithm], bytes_1.arrayify(key)).update(bytes_1.arrayify(data)).digest(\"hex\");\n}\n\nexports.computeHmac = computeHmac;","map":null,"metadata":{},"sourceType":"script"}