import { AncestorValueList, Props, PoseMap, PassiveValueMap, ReadValue, ReadValueFromSource, CreateValue, ConvertValue, ActivePoses, SetValueNative } from '../types';
declare type ValueFactoryProps<V, A, TD> = {
    poses: PoseMap<A, TD>;
    passive?: PassiveValueMap;
    ancestorValues: AncestorValueList<V>;
    readValue: ReadValue<V>;
    createValue: CreateValue<V>;
    convertValue: ConvertValue<V>;
    userSetValues: {
        [key: string]: V;
    };
    initialPose?: string | string[];
    readValueFromSource?: ReadValueFromSource;
    setValueNative: SetValueNative;
    activePoses: ActivePoses;
    props: Props;
};
export declare const DEFAULT_INITIAL_POSE = "init";
declare const createValueMap: <V, A, TD>(props: ValueFactoryProps<V, A, TD>) => Map<string, V>;
export default createValueMap;
