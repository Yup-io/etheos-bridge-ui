'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /* eslint-disable react/no-unused-prop-types */


var Wrapper = (0, _styledComponents2.default)('a')(function (_ref) {
  var background = _ref.background,
      size = _ref.size;
  return {
    display: 'flex',
    border: 'none',
    borderRadius: '50%',
    boxShadow: '0 0 4px rgba(0,0,0,.14),0 4px 8px rgba(0,0,0,.28)',
    cursor: 'pointer',
    outline: 'none',
    padding: '0',
    WebkitUserDrag: 'none',
    fontWeight: 'bold',
    justifyContent: 'center',
    alignItems: 'center',
    width: size,
    height: size,
    background: background
  };
});

var IconWrapper = (0, _styledComponents2.default)('div')(function (_ref2) {
  var isOpen = _ref2.isOpen;
  return {
    display: 'flex',
    position: 'absolute',
    WebkitTransition: '-webkit-transform 300ms',
    transition: 'transform 300ms',
    WebkitTransform: 'rotate(' + (isOpen ? 180 : 0) + 'deg)',
    transform: 'rotate(' + (isOpen ? 180 : 0) + 'deg)'
  };
});

var MainButton = function MainButton(_ref3) {
  var iconResting = _ref3.iconResting,
      iconActive = _ref3.iconActive,
      isOpen = _ref3.isOpen,
      rest = _objectWithoutProperties(_ref3, ['iconResting', 'iconActive', 'isOpen']);

  return _react2.default.createElement(
    Wrapper,
    rest,
    _react2.default.createElement(
      IconWrapper,
      { isOpen: isOpen },
      isOpen ? iconActive : iconResting
    )
  );
};

MainButton.propTypes = {
  iconResting: _propTypes2.default.node.isRequired,
  iconActive: _propTypes2.default.node.isRequired,
  isOpen: _propTypes2.default.bool,
  size: _propTypes2.default.number
};

MainButton.defaultProps = {
  isOpen: false,
  size: 56
};

exports.default = MainButton;