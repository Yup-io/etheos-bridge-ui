var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

import React from 'react';
import PropTypes from 'prop-types';
import styledJss from 'styled-components';

export var DIRECTIONS = {
  up: 'column-reverse',
  down: 'column',
  left: 'row-reverse',
  right: 'row'
};

var StyledUl = styledJss('ul')(function (_ref) {
  var direction = _ref.direction;
  return {
    display: 'flex',
    width: 'fit-content',
    listStyle: 'none',
    margin: '0',
    padding: '0',
    flexDirection: DIRECTIONS[direction],
    justifyContent: 'center',
    alignItems: 'center'
  };
});

var FloatingMenu = function FloatingMenu(_ref2) {
  var _ref2$slideSpeed = _ref2.slideSpeed,
      slideSpeed = _ref2$slideSpeed === undefined ? 500 : _ref2$slideSpeed,
      _ref2$direction = _ref2.direction,
      direction = _ref2$direction === undefined ? 'down' : _ref2$direction,
      className = _ref2.className,
      _ref2$isOpen = _ref2.isOpen,
      isOpen = _ref2$isOpen === undefined ? false : _ref2$isOpen,
      _ref2$spacing = _ref2.spacing,
      spacing = _ref2$spacing === undefined ? 8 : _ref2$spacing,
      children = _ref2.children,
      rest = _objectWithoutProperties(_ref2, ['slideSpeed', 'direction', 'className', 'isOpen', 'spacing', 'children']);

  var childrenWithProps = React.Children.map(children, function (child, index) {
    return React.cloneElement(child, {
      isOpen: isOpen,
      slideSpeed: slideSpeed,
      direction: direction,
      index: index,
      spacing: spacing
    });
  });

  return React.createElement(
    StyledUl,
    _extends({
      className: className,
      direction: direction
    }, rest),
    childrenWithProps
  );
};

FloatingMenu.propTypes = {
  className: PropTypes.string,
  children: PropTypes.arrayOf(PropTypes.element).isRequired,
  slideSpeed: PropTypes.number,
  spacing: PropTypes.number,
  direction: PropTypes.string,
  isOpen: PropTypes.bool
};

export default FloatingMenu;