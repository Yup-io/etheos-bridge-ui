function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/* eslint-disable react/no-unused-prop-types */
import React from 'react';
import styled from 'styled-components';
import PropTypes from 'prop-types';

var Wrapper = styled('a')(function (_ref) {
  var background = _ref.background,
      size = _ref.size;
  return {
    display: 'flex',
    border: 'none',
    borderRadius: '50%',
    boxShadow: '0 0 4px rgba(0,0,0,.14),0 4px 8px rgba(0,0,0,.28)',
    cursor: 'pointer',
    outline: 'none',
    padding: '0',
    WebkitUserDrag: 'none',
    fontWeight: 'bold',
    justifyContent: 'center',
    alignItems: 'center',
    width: size,
    height: size,
    background: background
  };
});

var IconWrapper = styled('div')(function (_ref2) {
  var isOpen = _ref2.isOpen;
  return {
    display: 'flex',
    position: 'absolute',
    WebkitTransition: '-webkit-transform 300ms',
    transition: 'transform 300ms',
    WebkitTransform: 'rotate(' + (isOpen ? 180 : 0) + 'deg)',
    transform: 'rotate(' + (isOpen ? 180 : 0) + 'deg)'
  };
});

var MainButton = function MainButton(_ref3) {
  var iconResting = _ref3.iconResting,
      iconActive = _ref3.iconActive,
      isOpen = _ref3.isOpen,
      rest = _objectWithoutProperties(_ref3, ['iconResting', 'iconActive', 'isOpen']);

  return React.createElement(
    Wrapper,
    rest,
    React.createElement(
      IconWrapper,
      { isOpen: isOpen },
      isOpen ? iconActive : iconResting
    )
  );
};

MainButton.propTypes = {
  iconResting: PropTypes.node.isRequired,
  iconActive: PropTypes.node.isRequired,
  isOpen: PropTypes.bool,
  size: PropTypes.number
};

MainButton.defaultProps = {
  isOpen: false,
  size: 56
};

export default MainButton;