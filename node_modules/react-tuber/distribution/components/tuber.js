"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const aspect_to_padding_1 = require("../utilities/aspect-to-padding");
const detect_media_source_1 = require("../utilities/detect-media-source");
class Tuber extends react_1.default.Component {
    render() {
        const _mediaSource = detect_media_source_1.detectMediaSource(this.props.src);
        const _aspectContainerProps = {
            style: {
                position: "relative",
                width: "100%",
                paddingTop: aspect_to_padding_1.aspectToPadding(this.props.aspect || "4:3")
            }
        }, _outerContainerProps = {
            className: this.props.className || "",
            style: Object.assign({ position: "relative", width: this.props.width || "100%" }, this.props.style)
        }, _embeddedContainerProps = {
            style: {
                position: "absolute",
                top: "0",
                right: "0",
                width: "100%",
                height: "100%",
                border: "0px solid white"
            },
            frameBorder: "0",
            allow: "autoplay; fullscreen",
            allowFullScreen: true,
            autoPlay: true
        };
        return _mediaSource === null
            ? react_1.default.createElement("div")
            : react_1.default.createElement("div", _outerContainerProps, react_1.default.createElement("div", _aspectContainerProps, react_1.default.createElement(_mediaSource.type, Object.assign({}, _embeddedContainerProps, { src: _mediaSource.toEmbeddedSrc(this.props.src, this.props.autoplay === true) }))));
    }
}
exports.Tuber = Tuber;
