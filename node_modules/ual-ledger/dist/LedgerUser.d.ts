import { Chain, SignTransactionResponse, User } from 'universal-authenticator-library';
export declare class LedgerUser extends User {
    private chain;
    private accountName;
    private requestPermission;
    signatureProvider: any;
    private api;
    private rpc;
    private textEncoder;
    private textDecoder;
    constructor(chain: Chain, accountName: string, requestPermission?: boolean);
    init(): Promise<void>;
    signTransaction(transaction: any, { broadcast, blocksBehind, expireSeconds }: {
        broadcast?: boolean;
        blocksBehind?: number;
        expireSeconds?: number;
    }): Promise<SignTransactionResponse>;
    signArbitrary(): Promise<string>;
    verifyKeyOwnership(_: string): Promise<boolean>;
    getAccountName(): Promise<string>;
    getChainId(): Promise<string>;
    getKeys(): Promise<string[]>;
    isAccountValid(): Promise<boolean>;
    private extractAccountKeys;
}
