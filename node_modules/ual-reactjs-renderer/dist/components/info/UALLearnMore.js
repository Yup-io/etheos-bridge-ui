"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UALLearnMore = void 0;

var _react = _interopRequireWildcard(require("react"));

var _io = require("react-icons/io");

var _i18n = _interopRequireDefault(require("../../i18n"));

var _base = require("../../styles/base");

var _info = require("../../styles/info");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Component for rendering the "Learn More" text.
 */
var UALLearnMore = /*#__PURE__*/function (_Component) {
  _inherits(UALLearnMore, _Component);

  var _super = _createSuper(UALLearnMore);

  /**
   * @memberof UALLearnMore
   * @name state
   * @prop {boolean} [false] open - state of learn more text accordion
   */
  function UALLearnMore(props) {
    var _this;

    _classCallCheck(this, UALLearnMore);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "toggleMoreInfo", function () {
      var open = _this.state.open;

      _this.setState({
        open: !open
      });
    });

    _this.state = {
      open: false
    };
    return _this;
  }
  /**
   * @method
   * @return {Void}
   */


  _createClass(UALLearnMore, [{
    key: "render",
    value: function render() {
      var open = this.state.open;
      var buttonMessage = open ? _i18n["default"].t('learnMoreAccept') : _i18n["default"].t('learnMore');

      var info = _i18n["default"].t('learnMoreText');

      var accordionStyles = open ? _info.infoExpanded : {};
      var buttonIcon = open ? /*#__PURE__*/_react["default"].createElement(_io.IoMdCloseCircleOutline, {
        style: _info.learnMoreIcon
      }) : /*#__PURE__*/_react["default"].createElement(_io.IoMdInformationCircleOutline, {
        style: _info.learnMoreIcon
      });
      return /*#__PURE__*/_react["default"].createElement("div", {
        style: _base.base
      }, /*#__PURE__*/_react["default"].createElement("div", {
        style: _objectSpread(_objectSpread({}, _info.learnMore), accordionStyles)
      }, /*#__PURE__*/_react["default"].createElement("p", {
        style: _info.learnMoreText
      }, info)), /*#__PURE__*/_react["default"].createElement("p", null, /*#__PURE__*/_react["default"].createElement("span", {
        style: _info.learnMoreButton,
        onClick: this.toggleMoreInfo,
        role: "button",
        "aria-label": buttonMessage,
        "aria-pressed": open,
        tabIndex: "-1"
      }, buttonIcon, ' ', buttonMessage)));
    }
  }]);

  return UALLearnMore;
}(_react.Component);

exports.UALLearnMore = UALLearnMore;

_defineProperty(UALLearnMore, "displayName", 'UALLearnMore');
//# sourceMappingURL=UALLearnMore.js.map