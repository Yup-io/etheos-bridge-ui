{"version":3,"sources":["../../../src/components/misc/UALExitButton.js"],"names":["UALExitButton","props","setState","hoverStyle","exitHover","state","hideModal","isSecondaryStyle","buttonColor","color","exitWrapper","exit","scaleUp","scaleDown","Component","propTypes","PropTypes","func","isRequired","bool"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;IAGaA,a;;;;;AAGX,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA;;;;;;AAFiB,8DAgBT,YAAM;AACd,YAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEC;AAAd,OAAd;AACD,KAlBkB;;AAAA,gEAwBP,YAAM;AAChB,YAAKF,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAd;AACD,KA1BkB;;AAOjB,UAAKE,KAAL,GAAa;AACXF,MAAAA,UAAU,EAAE;AADD,KAAb;AAPiB;AAUlB;AAED;;;;;;;;6BAgBS;AAAA,wBACiC,KAAKF,KADtC;AAAA,UACCK,SADD,eACCA,SADD;AAAA,UACYC,gBADZ,eACYA,gBADZ;AAAA,UAECJ,UAFD,GAEgB,KAAKE,KAFrB,CAECF,UAFD;AAGP,UAAMK,WAAW,GAAGD,gBAAgB,GAAG;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAAH,GAAwB,EAA5D;AACA,0BACE;AAAG,QAAA,KAAK,EAAEC;AAAV,sBACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,sBAAW,MAFb;AAGE,QAAA,QAAQ,EAAC,IAHX;AAIE,QAAA,KAAK,gDAAOC,UAAP,GAAgBR,UAAhB,GAA+BK,WAA/B,CAJP;AAKE,QAAA,YAAY,EAAE,KAAKI,OALrB;AAME,QAAA,YAAY,EAAE,KAAKC,SANrB;AAOE,QAAA,OAAO,EAAEP;AAPX,sBASE,gCAAC,WAAD,OATF,CADF,CADF;AAeD;;;;EAlDgCQ,gB;AAqDnC;;;;;;;;;;gBArDad,a,iBACU,e;;AA0DvBA,aAAa,CAACe,SAAd,GAA0B;AACxBT,EAAAA,SAAS,EAAEU,sBAAUC,IAAV,CAAeC,UADF;AAExBX,EAAAA,gBAAgB,EAAES,sBAAUG,IAAV,CAAeD;AAFT,CAA1B","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { FaTimes } from 'react-icons/fa'\n\nimport { exitWrapper, exit, exitHover } from '../../styles/buttons/exit'\n\n/**\n * Component for rendering a modal close button.\n */\nexport class UALExitButton extends Component {\n  static displayName = 'UALExitButton'\n\n  constructor(props) {\n    super(props)\n    /**\n     * @memberof UALExitButton\n     * @name state\n     * @prop {Object} hoverStyle - additional button style on hover\n     */\n    this.state = {\n      hoverStyle: {},\n    }\n  }\n\n  /**\n   * @method\n   * @return {Void}\n   */\n  scaleUp = () => {\n    this.setState({ hoverStyle: exitHover })\n  }\n\n  /**\n   * @method\n   * @return {Void}\n   */\n  scaleDown = () => {\n    this.setState({ hoverStyle: {} })\n  }\n\n  render() {\n    const { hideModal, isSecondaryStyle } = this.props\n    const { hoverStyle } = this.state\n    const buttonColor = isSecondaryStyle ? { color: 'white' } : {}\n    return (\n      <p style={exitWrapper}>\n        <span\n          role='button'\n          aria-label='exit'\n          tabIndex='-1'\n          style={{ ...exit, ...hoverStyle, ...buttonColor }}\n          onMouseEnter={this.scaleUp}\n          onMouseLeave={this.scaleDown}\n          onClick={hideModal}\n        >\n          <FaTimes />\n        </span>\n      </p>\n    )\n  }\n}\n\n/**\n * @memberof UALExitButton\n * @name props\n * @prop {function} hideModal - from UAL, hides modal\n * @prop {boolean} isSecondaryStyle - whether or not button should be light\n */\nUALExitButton.propTypes = {\n  hideModal: PropTypes.func.isRequired,\n  isSecondaryStyle: PropTypes.bool.isRequired,\n}\n"],"file":"UALExitButton.js"}