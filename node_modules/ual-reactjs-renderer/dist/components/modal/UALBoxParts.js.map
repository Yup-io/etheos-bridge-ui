{"version":3,"sources":["../../../src/components/modal/UALBoxParts.js"],"names":["UALBoxParts","authenticator","index","instructions","authenticate","checkAuthenticators","enterInstallScreen","submitAccountForLogin","loading","refreshBox","secondaryInstructions","showInstallScreen","retry","retryButton","i18n","t","trueStyle","secondaryInstructionsLight","secondaryInstructionsText","goBackToAuthSelect","showAccountInput","error","logout","goBackAction","backButtonWrapper","backButton","backButtonText","app","availableAuthenticators","authProps","mainContent","map","auth","authButton","length","noAvailableAuthenticators","installAuthenticatorSection","accountLogin","activeAuthenticator","authenticatorStyle","getStyle","background","backgroundColor","message","boxTitle","src","source","type","toLowerCase","titleStyle","titleSecondary","title","titleContent","hideModal"],"mappings":"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","sourcesContent":["import React from 'react'\nimport i18n from '../../i18n'\n\nimport { UALAccountInput } from '../authentication/UALAccountInput'\nimport { UALAuthButton } from '../authentication/UALAuthButton'\nimport { UALLearnMore } from '../info/UALLearnMore'\nimport { UALExitButton } from '../misc/UALExitButton'\nimport { UALErrorMessage } from '../info/UALErrorMessage'\nimport { UALLoadingIcon } from '../misc/UALLoadingIcon'\nimport { UALInstallAuth } from '../authentication/UALInstallAuth'\n\nimport { title, titleSecondary } from '../../styles/title'\nimport { backButton, backButtonWrapper, backButtonText } from '../../styles/buttons/back'\nimport { retryButton } from '../../styles/buttons/retry'\nimport { secondaryInstructionsText, secondaryInstructionsLight } from '../../styles/instructions'\nimport { darkenColor } from '../../utils'\n\n/**\n * @class\n * @name UALBoxParts\n * @desc class for rendering sections of the UALBox Component\n */\nexport class UALBoxParts {\n  static displayName = 'UALBoxParts'\n\n  /**\n   * returns an instance of UALAuthButton\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name authButton\n   * @return {ReactElement}\n   */\n  static authButton(authenticator, index, instructions, authenticate, checkAuthenticators, enterInstallScreen) {\n    return (\n      <UALAuthButton\n        key={index}\n        index={index}\n        instructions={instructions}\n        onErroredState={checkAuthenticators}\n        authenticator={authenticator}\n        onAuthenticatorSelect={authenticate}\n        onRequestInstall={enterInstallScreen}\n      />\n    )\n  }\n\n  /**\n   * returns an instance of UALAuthInput\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name accountLogin\n   * @return {ReactElement}\n   */\n  static accountLogin(submitAccountForLogin, loading, authenticator) {\n    return (\n      <UALAccountInput\n        submitAccountForLogin={submitAccountForLogin}\n        authenticator={authenticator}\n        loading={loading}\n      />\n    )\n  }\n\n  /**\n   * returns the secondary instructions for a given screen\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name secondaryInstructions\n   * @return {HTML}\n   */\n  static secondaryInstructions({ secondaryInstructions, showInstallScreen }, refreshBox) {\n    const retry = (\n      <strong\n        role='button'\n        aria-label='Go Back'\n        tabIndex='-1'\n        style={retryButton}\n        onClick={refreshBox}\n      >\n        {i18n.t('retry')}\n      </strong>\n    )\n    if (secondaryInstructions !== '') {\n      const trueStyle = showInstallScreen ? secondaryInstructionsLight : secondaryInstructionsText\n      return (\n        <p style={trueStyle}>\n          {secondaryInstructions}\n          {'  '}\n          {!showInstallScreen && retry}\n          {!showInstallScreen && '.'}\n        </p>\n      )\n    }\n    return null\n  }\n\n  /**\n   * returns an instance of UALInstallAuth\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name installAuthenticatorSection\n   * @return {ReactElement}\n   */\n  static installAuthenticatorSection(authenticator) {\n    return <UALInstallAuth authenticator={authenticator} />\n  }\n\n  /**\n   * returns a back-button DOM element\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name backButton\n   * @return {HTML}\n   */\n  static backButton({ showAccountInput, error, loading, logout, showInstallScreen }, goBackToAuthSelect) {\n    const goBackAction = error ? logout : goBackToAuthSelect\n    if ((error || showAccountInput || showInstallScreen) && !loading) {\n      return (\n        <p style={backButtonWrapper}>\n          <span role='button' aria-label='Go Back' tabIndex='-1' style={backButton} onClick={goBackAction}>\n            <strong style={backButtonText}>{i18n.t('goBack')}</strong>\n          </span>\n        </p>\n      )\n    }\n    return null\n  }\n\n  /**\n   * returns instructions on dealing with no available authenticators\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name noAvailableAuthenticators\n   * @return {HTML}\n   */\n  static noAvailableAuthenticators() {\n    return (\n      <p\n        style={secondaryInstructionsText}\n      >\n        {i18n.t('noAuthenticatorsAvailableForDevice')}\n      </p>\n    )\n  }\n\n  /**\n   * returns the main content of UALBox\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name mainContent\n   * @return {ReactElement[]}\n   */\n  static mainContent(app, authenticate, checkAuthenticators, enterInstallScreen) {\n    const {\n      submitAccountForLogin,\n      authenticator,\n      loading,\n      error,\n      showAccountInput,\n      showInstallScreen,\n      availableAuthenticators,\n      instructions,\n    } = app\n    const authProps = [\n      authenticate,\n      checkAuthenticators,\n      enterInstallScreen,\n    ]\n    let mainContent = !loading\n      ? availableAuthenticators.map((auth, index) => this.authButton(auth, index, instructions, ...authProps))\n      : <UALLoadingIcon withContainer />\n    if (!loading && !availableAuthenticators.length) {\n      mainContent = this.noAvailableAuthenticators()\n    }\n    if (showAccountInput || showInstallScreen) {\n      mainContent = showInstallScreen\n        ? this.installAuthenticatorSection(authenticator)\n        : this.accountLogin(submitAccountForLogin, loading, authenticator)\n    }\n    return !error && mainContent\n  }\n\n  /**\n   * returns an instance of UALErrorMessage\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name errorMessage\n   * @return {ReactElement}\n   */\n  static errorMessage({ error }) {\n    if (error) {\n      return <UALErrorMessage error={error} />\n    }\n    return null\n  }\n\n  /**\n   * returns an instance of UALLearnMore\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name learnMore\n   * @return {ReactElement}\n   */\n  static learnMore({ showAccountInput, showInstallScreen, error, loading }) {\n    if (!showAccountInput && !error && !loading && !showInstallScreen) {\n      return <UALLearnMore />\n    }\n    return null\n  }\n\n  /**\n   * returns the background color for a given screen\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name boxBackground\n   * @return {Object}\n   */\n  static boxBackground({ error, loading, showAccountInput, showInstallScreen, activeAuthenticator, authenticator }) {\n    let authenticatorStyle = activeAuthenticator && activeAuthenticator.getStyle().background\n    let background = {}\n    if (!authenticatorStyle) {\n      authenticatorStyle = authenticator && authenticator.getStyle().background\n    }\n    if (showAccountInput || loading || showInstallScreen || error) {\n      background = {\n        backgroundColor: darkenColor(authenticatorStyle)\n      }\n    }\n    return background\n  }\n\n  /**\n   * returns the main title of a screen of UALBox\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name boxTitle\n   * @return {HTML}\n   */\n  static boxTitle({ error, instructions, showAccountInput, showInstallScreen, loading, message }) {\n    const boxTitle = error ? i18n.t('errorDuring', { src: error.source, type: error.type.toLowerCase() }) : instructions\n    const titleStyle = error || showAccountInput || loading || showInstallScreen ? titleSecondary : title\n    const titleContent = !loading || error ? boxTitle : message\n    return <h1 style={titleStyle}>{titleContent}</h1>\n  }\n\n  /**\n   * returns an instance of UALExitButton\n   *\n   * @memberof UALBoxParts\n   * @method\n   * @name exitButton\n   * @return {ReactElement}\n   */\n  static exitButton({ error, showAccountInput, showInstallScreen, loading, hideModal }) {\n    return (\n      <UALExitButton\n        isSecondaryStyle={!!error || showAccountInput || !!loading || showInstallScreen}\n        hideModal={hideModal}\n      />\n    )\n  }\n}\n"],"file":"UALBoxParts.js"}