"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UALContainer = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _container = require("../../styles/container");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @class
 * @name UALContainer
 * @desc wrapper for UALBox contents
 */
var UALContainer = function UALContainer(_ref) {
  var enter = _ref.enter,
      exit = _ref.exit,
      transitionForward = _ref.transitionForward,
      children = _ref.children;
  var end = transitionForward ? _container.containerLeft : _container.containerRight;
  var start = transitionForward ? _container.containerRight : _container.containerLeft;
  var startStyles = enter || exit ? _container.containerAnimated : start;
  var enterStyles = enter ? _container.containerCenter : {};
  var exitStyles = exit ? end : {};
  return /*#__PURE__*/_react["default"].createElement("div", {
    style: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, _container.container), startStyles), enterStyles), exitStyles)
  }, children);
};

exports.UALContainer = UALContainer;
UALContainer.displayName = 'UALContainer';
/**
 * @memberof UALContainer
 * @name props
 * @prop {boolean} enter - whether or not the screen has entered the user's view
 * @prop {boolean} exit - whether or not the screen has exited the user's view
 * @prop {boolean} transitionForward - whether or not user is progressing forward through screens
 * @prop {Node[]|Node} children - nested components
 */

UALContainer.propTypes = {
  enter: _propTypes["default"].bool.isRequired,
  exit: _propTypes["default"].bool.isRequired,
  transitionForward: _propTypes["default"].bool.isRequired,
  children: _propTypes["default"].oneOfType([_propTypes["default"].arrayOf(_propTypes["default"].node), _propTypes["default"].node]).isRequired
};
//# sourceMappingURL=UALContainer.js.map