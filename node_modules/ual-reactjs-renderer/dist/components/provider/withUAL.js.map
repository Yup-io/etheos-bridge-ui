{"version":3,"sources":["../../../src/components/provider/withUAL.js"],"names":["withUAL","WrappedComponent","props","displayName","name","WithUAL","wrappedProps","context"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;AAEA;;;;;AAKO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAAAC,gBAAgB;AAAA,SAAI,UAAAC,KAAK,EAAI;AAClD,QAAMC,WAAW,GAAGF,gBAAgB,CAACE,WAAjB,IAAgCF,gBAAgB,CAACG,IAAjD,IAAyD,WAA7E;;AACA,QAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,YAAY;AAAA,0BAC1B,gCAAC,sBAAD,CAAY,QAAZ,QACI,UAAAC,OAAO;AAAA,4BAAK,gCAAC,gBAAD,eAAsBD,YAAtB;AAAoC,UAAA,GAAG,EAAEC;AAAzC,WAAL;AAAA,OADX,CAD0B;AAAA,KAA5B;;AAKAF,IAAAA,OAAO,CAACF,WAAR,qBAAiCA,WAAjC;AACA,wBAAO,gCAAC,OAAD,EAAaD,KAAb,CAAP;AACD,GATsC;AAAA,CAAhC","sourcesContent":["import React from 'react'\n\nimport { UALContext } from './UALContext'\n\n/**\n * @type {function}\n * @name withUAL\n * @desc Function for making a component a consumer of the UAL context\n */\nexport const withUAL = WrappedComponent => props => {\n  const displayName = WrappedComponent.displayName || WrappedComponent.name || 'Component'\n  const WithUAL = wrappedProps => (\n    <UALContext.Consumer>\n      { context =>  <WrappedComponent {...wrappedProps} ual={context} /> }\n    </UALContext.Consumer>\n  )\n  WithUAL.displayName = `withUAL(${displayName})`\n  return <WithUAL {...props}/>\n}\n"],"file":"withUAL.js"}