{"version":3,"sources":["../../src/utils/index.js"],"names":["hexToRGB","color","num","parseInt","replace","r","b","g","limitValues","value","darkenColor","colors","indexOf","split","map"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;AAKA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,MAAMC,GAAG,GAAGC,QAAQ,CAACF,KAAK,CAACG,OAAN,CAAc,GAAd,EAAmB,EAAnB,CAAD,EAAyB,EAAzB,CAApB;AACA,MAAMC,CAAC,GAAG,CAACH,GAAG,IAAI,EAAR,IAAc,EAAxB,CAF0B,CAEC;;AAC3B,MAAMI,CAAC,GAAG,CAAEJ,GAAG,IAAI,CAAR,GAAa,MAAd,IAAwB,EAAlC,CAH0B,CAGW;;AACrC,MAAMK,CAAC,GAAG,CAACL,GAAG,GAAG,QAAP,IAAmB,EAA7B,CAJ0B,CAIM;;AAChC,SAAO,CAACG,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAP;AACD,CAND;;AAQA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7B,MAAIA,KAAK,GAAG,GAAZ,EAAiB,OAAO,GAAP;AACjB,MAAIA,KAAK,GAAG,CAAZ,EAAe,OAAO,CAAP;AACf,SAAOA,KAAP;AACD,CAJD;;AAMO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACT,KAAD,EAAW;AACpC,MAAIU,MAAJ;;AACA,MAAI,CAACV,KAAL,EAAY;AACV,WAAO,SAAP;AACD;;AACD,MAAIA,KAAK,CAACW,OAAN,CAAc,KAAd,MAAyB,CAAC,CAA9B,EAAiC;AAC/BD,IAAAA,MAAM,GAAGV,KAAK,CAACG,OAAN,CAAc,MAAd,EAAsB,EAAtB,EACNA,OADM,CACE,GADF,EACO,EADP,EAENS,KAFM,CAEA,GAFA,EAGNC,GAHM,CAGF,UAAAZ,GAAG;AAAA,aAAIC,QAAQ,CAACD,GAAD,EAAM,EAAN,CAAR,GAAoB,EAAxB;AAAA,KAHD,EAINY,GAJM,CAIFN,WAJE,CAAT;AAKD,GAND,MAMO;AACLG,IAAAA,MAAM,GAAGX,QAAQ,CAACC,KAAD,CAAR,CAAgBa,GAAhB,CAAoBN,WAApB,CAAT;AACD;;AAbmC,gBAclBG,MAdkB;AAAA;AAAA,MAc7BN,CAd6B;AAAA,MAc1BE,CAd0B;AAAA,MAcvBD,CAduB;;AAepC,uBAAcD,CAAd,eAAoBE,CAApB,eAA0BD,CAA1B;AACD,CAhBM","sourcesContent":["/*\n * Code inspired by Chris Coyier's vanilla css lighten/darken color solution\n * https://css-tricks.com/snippets/javascript/lighten-darken-color/\n */\n\nconst hexToRGB = (color) => {\n  const num = parseInt(color.replace('#', ''), 16)\n  const r = (num >> 16) - 30 // eslint-disable-line\n  const b = ((num >> 8) & 0x00FF) - 30 // eslint-disable-line\n  const g = (num & 0x0000FF) - 30 // eslint-disable-line\n  return [r, b, g]\n}\n\nconst limitValues = (value) => {\n  if (value > 255) return 255\n  if (value < 0) return 0\n  return value\n}\n\nexport const darkenColor = (color) => {\n  let colors\n  if (!color) {\n    return '#1A3270'\n  }\n  if (color.indexOf('rgb') !== -1) {\n    colors = color.replace('rgb(', '')\n      .replace(')', '')\n      .split(',')\n      .map(num => parseInt(num, 10) - 30)\n      .map(limitValues)\n  } else {\n    colors = hexToRGB(color).map(limitValues)\n  }\n  const [r, g, b] = colors\n  return `rgb(${r}, ${g}, ${b})`\n}\n"],"file":"index.js"}